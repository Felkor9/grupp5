CREATE DATABASE reseplanerare;

USE reseplanerare;

CREATE TABLE resor(
    resorId INT NOT NULL AUTO_INCREMENT UNIQUE,
    resorLand VARCHAR(50) NOT NULL ,
    resorDatum DATE NOT NULL,
    resorLangd INT NOT NULL ,
    resorPris INT NOT NULL,
    PRIMARY KEY (resorId)
);

CREATE TABLE destination(
    destinationId INT NOT NULL AUTO_INCREMENT UNIQUE,
    destinationStad VARCHAR(50),
    destinationHotell VARCHAR(50),
    destinationResorId INT NOT NULL,
    PRIMARY KEY (destinationId),
    FOREIGN KEY (destinationResorId) REFERENCES resor(resorId)
);

CREATE TABLE user(
    userId INT NOT NULL AUTO_INCREMENT UNIQUE ,
    userName VARCHAR(50) NOT NULL,
    userEmail VARCHAR(50) NOT NULL,
    PRIMARY KEY (userId)
);

CREATE TABLE bokningar(
    bokningId INT NOT NULL AUTO_INCREMENT UNIQUE,
    bokningAntalPlatser INT NOT NULL,
    bokningUserId INT NOT NULL ,
    bokningResorId INT NOT NULL ,
    PRIMARY KEY (bokningId),
    FOREIGN KEY (bokningUserId) REFERENCES user(userId),
    FOREIGN KEY (bokningResorId) REFERENCES resor(resorId)
);

INSERT INTO resor(resorLand, resorDatum, resorLangd, resorPris)
VALUES ('Sverige', 20250323, 1, 2000);

INSERT INTO destination(destinationStad, destinationHotell, destinationResorId)
VALUES ('Malmö', "Scandic Malmö", 1);

INSERT INTO user(userName, userEmail)
VALUES ('Anna', 'anna@gmail.com');

INSERT INTO bokningar(bokningAntalPlatser, bokningResorId, bokningUserId)
VALUES (3, 1, 1);



-- SELECTSATSER HÄR
SELECT * FROM resor;
SELECT * FROM destination;
SELECT * FROM bokningar;
SELECT * FROM user;

-- INNER JOIN bokning - user - resor - destination


SELECT
    bokningar.bokningAntalPlatser,
    user.userName,
    resor.resorLand,
    destination.destinationStad
FROM bokningar
INNER JOIN resor ON bokningar.bokningResorId = resor.resorId
INNER JOIN user ON bokningar.bokningUserId = user.userId
INNER JOIN destination ON resor.resorId = destination.destinationResorId
WHERE userId = 1;



-- DROP TABLE HÄR I ORDNING
DROP TABLE resor;
DROP TABLE destination;
DROP TABLE user;
DROP TABLE bokningar;
